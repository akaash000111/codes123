a)Amstrong

#include <stdio.h>
#include <math.h>

int isArmstrong(int num) {
    int sum = 0, temp = num, digit;
    int order = (int)log10(num) + 1;

    while (temp != 0) {
        digit = temp % 10;
        sum += pow(digit, order);
        temp /= 10;
    }

    if (sum == num) {
        return 1;
    } else {
        return 0;
    }
}

int main() {
    int n, count = 0, i = 1, sum = 0;

    printf("Enter the value of n: ");
    scanf("%d", &n);

    while (count < n) {
        if (isArmstrong(i)) {
            sum += i;
            count++;
        }
        i++;
    }

    printf("The sum of the first %d Armstrong numbers is %d", n, sum);

    return 0;
}



b)Krishnamoorthy series

#include <stdio.h>
#include <math.h>

int isKrishnamoorthy(int num) {
    int sum = 0, prod = 1, temp = num, digit;

    while (temp != 0) {
        digit = temp % 10;
        sum += digit;
        prod *= digit;
        temp /= 10;
    }

    if (sum * prod == num) {
        return 1;
    } else {
        return 0;
    }
}

int main() {
    int n, count = 0, i = 1;

    printf("Enter the value of n: ");
    scanf("%d", &n);

    printf("Krishnamoorthy numbers up to %d:\n", n);

    while (i <= n) {
        if (isKrishnamoorthy(i)) {
            printf("%d\n", i);
            count++;
        }
        i++;
    }

    if (count == 0) {
        printf("No Krishnamoorthy numbers found up to %d\n", n);
    }

    return 0;
}



c) fibonacci_series

#include <stdio.h>

int main() {
   int n, i, t1 = 0, t2 = 1, nextTerm;

   printf("Enter the number of terms: ");
   scanf("%d", &n);

   printf("Fibonacci Series: ");

   for (i = 1; i <= n; ++i) {
      printf("%d, ", t1);
      nextTerm = t1 + t2;
      t1 = t2;
      t2 = nextTerm;
   }

   return 0;
}


d) sine series

#include <stdio.h>
#include <math.h>

int main() {
   double x, sinx = 0.0;
   int i, j, n;

   printf("Enter the value of x (in degrees): ");
   scanf("%lf", &x);

   // Convert degrees to radians
   x = x * M_PI / 180.0;

   printf("Enter the number of terms: ");
   scanf("%d", &n);

   // Calculate the sine series using the Taylor series expansion
   for (i = 1, j = 1; i <= n; i++, j += 2) {
      if (i % 2 != 0) {
         sinx += pow(x, j) / factorial(j);
      } else {
         sinx -= pow(x, j) / factorial(j);
      }
   }

   printf("sin(%lf) = %lf\n", x, sinx);

   return 0;
}

// Function to calculate the factorial of a number
int factorial(int n) {
   if (n == 0 || n == 1) {
      return 1;
   } else {
      return n * factorial(n - 1);
   }
}


e) cosine series

#include <stdio.h>
#include <math.h>

int main() {
   double x, cosx = 1.0;
   int i, j, n;

   printf("Enter the value of x (in degrees): ");
   scanf("%lf", &x);

   // Convert degrees to radians
   x = x * M_PI / 180.0;

   printf("Enter the number of terms: ");
   scanf("%d", &n);

   // Calculate the cosine series using the Taylor series expansion
   for (i = 1, j = 2; i <= n; i++, j += 2) {
      if (i % 2 != 0) {
         cosx -= pow(x, j) / factorial(j);
      } else {
         cosx += pow(x, j) / factorial(j);
      }
   }

   printf("cos(%lf) = %lf\n", x, cosx);

   return 0;
}

// Function to calculate the factorial of a number
int factorial(int n) {
   if (n == 0 || n == 1) {
      return 1;
   } else {
      return n * factorial(n - 1);
   }
}


f) binary to octal

#include <stdio.h>
#include <math.h>

int binaryToDecimal(int binary)
{
    int decimal = 0, i = 0;
    while (binary != 0)
    {
        int remainder = binary % 10;
        binary /= 10;
        decimal += remainder * pow(2, i);
        i++;
    }
    return decimal;
}

int main()
{
    int binary, decimal = 0, octal = 0, i = 0;
    printf("Enter a binary number: ");
    scanf("%d", &binary);

    decimal = binaryToDecimal(binary);

    while (decimal != 0)
    {
        octal += (decimal % 8) * pow(10, i);
        decimal /= 8;
        i++;
    }

    printf("Octal number: %d", octal);

    return 0;
}


g) octal to binary

#include <stdio.h>

int main()
{
    int octal, decimal = 0, binary = 0, i = 0;

    printf("Enter an octal number: ");
    scanf("%d", &octal);

    // Convert octal to decimal
    while (octal != 0)
    {
        decimal += (octal % 10) * pow(8, i);
        i++;
        octal /= 10;
    }

    i = 1;
    // Convert decimal to binary
    while (decimal != 0)
    {
        int remainder = decimal % 2;
        binary += remainder * i;
        i *= 10;
        decimal /= 2;
    }

    printf("Binary number: %d", binary);

    return 0;
}